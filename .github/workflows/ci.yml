name: Production Freeze CI
on:
  pull_request:
    branches: [ "release/production-freeze" ]
  push:
    branches: [ "release/production-freeze" ]

jobs:
  preflight:
    name: "Production Freeze Preflight"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0  # Full history for freeze check
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with: 
          version: 9
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: |
          cd client
          pnpm install --frozen-lockfile
          
      - name: ðŸ”’ Production Freeze Check
        run: |
          cd client
          node scripts/enforce-freeze.mjs
          
      - name: Lint check
        run: |
          cd client
          pnpm lint
          
      - name: TypeScript check
        run: |
          cd client
          pnpm typecheck
          
      - name: Duplicate files check
        run: |
          cd client
          node scripts/check-duplicates.mjs
          
      - name: Build production
        env:
          # Production environment variables for build test
          VITE_API_BASE: "/api"
          VITE_IMAGES_FEATURE_FLAG: "false"
          VITE_IMAGES_PROVIDER: "none"
          VITE_SUPABASE_URL: "https://placeholder.supabase.co"
          VITE_SUPABASE_ANON_KEY: "placeholder-key"
        run: |
          cd client
          pnpm build
          
      - name: Validate build artifacts
        run: |
          cd client
          # Check that essential files exist in build
          test -f dist/index.html
          test -d dist/assets
          echo "âœ… Build artifacts validated"
          
      - name: ðŸš€ Ready for deployment
        if: success()
        run: |
          echo "âœ… Production freeze preflight passed!"
          echo "âœ… No disallowed files modified"
          echo "âœ… Build successful with production config"
          echo "ðŸš€ Ready for deployment to staging/production"
